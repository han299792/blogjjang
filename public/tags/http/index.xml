<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Http on chick chick pok pok</title>
    <link>http://localhost:58239/tags/http/</link>
    <description>Recent content in Http on chick chick pok pok</description>
    <generator>Hugo</generator>
    <language>kn, en-us</language>
    <lastBuildDate>Mon, 11 Aug 2025 13:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:58239/tags/http/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HTTP 메서드에서 멱등성이란 무엇인가요?</title>
      <link>http://localhost:58239/blog/%EB%A9%94%EC%9D%BC%EB%A9%94%EC%9D%BC/20250811-mon/</link>
      <pubDate>Mon, 11 Aug 2025 13:00:00 +0000</pubDate>
      <guid>http://localhost:58239/blog/%EB%A9%94%EC%9D%BC%EB%A9%94%EC%9D%BC/20250811-mon/</guid>
      <description>&lt;p&gt;Idempotent 멱등한다는 것은 한번 수행하든 여러번 수행하든 같은 결과를 내는 작업의 속성이다. HTTP에서는 GET메소드가 리소스의 변화를 일으키지 않기 때문에 여러번 호출해도 같은 결과를 내는데, 이를 멱등성이 보장된 메서드라고 할 수 있다. PUT역시 여러번 호출해도 매번 같은 리소스로 업데이트 되는 것이기 때문에 결과가 달라지지 않는다. DELETE도 여러 번 호출해도 결국 같은 리소스를 삭제하는 것이기 때문에 멱등하다. 반면  POST, PATCH는 호출할때 서버 데이터를 변경하기 때문에 멱등한 메서드가 아니다.&lt;/p&gt;&#xA;&lt;h4 id=&#34;post--patch-메서드의-멱등성-구현&#34;&gt;POST,  PATCH 메서드의 멱등성 구현&lt;/h4&gt;&#xA;&lt;p&gt;멱등성은 시스템이 의도하지 않은 문제를 일으키지 않고 요청을 재시도 할 수 있기때문에, 결함없고 안전한 API를 만드는데 중요하다. 예를 들어, 결제 api는 사용자가 결제하는 시점에 네트워크나 타임아웃으로 인해 결과를 못받는 시나리오를 가정해봤을 때, 여러 번 결제가 진행되는 것을 막고 전에 받지 못한 결과만 다시 하는 식으로 구현되어 있는 것이 더 안전할 것이다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
